/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as DemoRouteImport } from './routes/demo'
import { Route as IndexRouteImport } from './routes/index'
import { Route as WorkspaceContactsIndexRouteImport } from './routes/$workspace.contacts.index'
import { Route as WorkspaceContactsContactRouteImport } from './routes/$workspace.contacts.$contact'
import { ServerRoute as ApiWorkspacesServerRouteImport } from './routes/api.workspaces'
import { ServerRoute as ApiContactsServerRouteImport } from './routes/api.contacts'
import { ServerRoute as ApiContactRolesServerRouteImport } from './routes/api.contact-roles'
import { ServerRoute as ApiContactRoleAssignmentsServerRouteImport } from './routes/api.contact-role-assignments'
import { ServerRoute as ApiContactActivitiesServerRouteImport } from './routes/api.contact-activities'
import { ServerRoute as ApiChromeServerRouteImport } from './routes/api.chrome'

const rootServerRouteImport = createServerRootRoute()

const DemoRoute = DemoRouteImport.update({
  id: '/demo',
  path: '/demo',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const WorkspaceContactsIndexRoute = WorkspaceContactsIndexRouteImport.update({
  id: '/$workspace/contacts/',
  path: '/$workspace/contacts/',
  getParentRoute: () => rootRouteImport,
} as any)
const WorkspaceContactsContactRoute =
  WorkspaceContactsContactRouteImport.update({
    id: '/$workspace/contacts/$contact',
    path: '/$workspace/contacts/$contact',
    getParentRoute: () => rootRouteImport,
  } as any)
const ApiWorkspacesServerRoute = ApiWorkspacesServerRouteImport.update({
  id: '/api/workspaces',
  path: '/api/workspaces',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiContactsServerRoute = ApiContactsServerRouteImport.update({
  id: '/api/contacts',
  path: '/api/contacts',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiContactRolesServerRoute = ApiContactRolesServerRouteImport.update({
  id: '/api/contact-roles',
  path: '/api/contact-roles',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiContactRoleAssignmentsServerRoute =
  ApiContactRoleAssignmentsServerRouteImport.update({
    id: '/api/contact-role-assignments',
    path: '/api/contact-role-assignments',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiContactActivitiesServerRoute =
  ApiContactActivitiesServerRouteImport.update({
    id: '/api/contact-activities',
    path: '/api/contact-activities',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiChromeServerRoute = ApiChromeServerRouteImport.update({
  id: '/api/chrome',
  path: '/api/chrome',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/demo': typeof DemoRoute
  '/$workspace/contacts/$contact': typeof WorkspaceContactsContactRoute
  '/$workspace/contacts': typeof WorkspaceContactsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/demo': typeof DemoRoute
  '/$workspace/contacts/$contact': typeof WorkspaceContactsContactRoute
  '/$workspace/contacts': typeof WorkspaceContactsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/demo': typeof DemoRoute
  '/$workspace/contacts/$contact': typeof WorkspaceContactsContactRoute
  '/$workspace/contacts/': typeof WorkspaceContactsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/demo'
    | '/$workspace/contacts/$contact'
    | '/$workspace/contacts'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/demo' | '/$workspace/contacts/$contact' | '/$workspace/contacts'
  id:
    | '__root__'
    | '/'
    | '/demo'
    | '/$workspace/contacts/$contact'
    | '/$workspace/contacts/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DemoRoute: typeof DemoRoute
  WorkspaceContactsContactRoute: typeof WorkspaceContactsContactRoute
  WorkspaceContactsIndexRoute: typeof WorkspaceContactsIndexRoute
}
export interface FileServerRoutesByFullPath {
  '/api/chrome': typeof ApiChromeServerRoute
  '/api/contact-activities': typeof ApiContactActivitiesServerRoute
  '/api/contact-role-assignments': typeof ApiContactRoleAssignmentsServerRoute
  '/api/contact-roles': typeof ApiContactRolesServerRoute
  '/api/contacts': typeof ApiContactsServerRoute
  '/api/workspaces': typeof ApiWorkspacesServerRoute
}
export interface FileServerRoutesByTo {
  '/api/chrome': typeof ApiChromeServerRoute
  '/api/contact-activities': typeof ApiContactActivitiesServerRoute
  '/api/contact-role-assignments': typeof ApiContactRoleAssignmentsServerRoute
  '/api/contact-roles': typeof ApiContactRolesServerRoute
  '/api/contacts': typeof ApiContactsServerRoute
  '/api/workspaces': typeof ApiWorkspacesServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/chrome': typeof ApiChromeServerRoute
  '/api/contact-activities': typeof ApiContactActivitiesServerRoute
  '/api/contact-role-assignments': typeof ApiContactRoleAssignmentsServerRoute
  '/api/contact-roles': typeof ApiContactRolesServerRoute
  '/api/contacts': typeof ApiContactsServerRoute
  '/api/workspaces': typeof ApiWorkspacesServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/api/chrome'
    | '/api/contact-activities'
    | '/api/contact-role-assignments'
    | '/api/contact-roles'
    | '/api/contacts'
    | '/api/workspaces'
  fileServerRoutesByTo: FileServerRoutesByTo
  to:
    | '/api/chrome'
    | '/api/contact-activities'
    | '/api/contact-role-assignments'
    | '/api/contact-roles'
    | '/api/contacts'
    | '/api/workspaces'
  id:
    | '__root__'
    | '/api/chrome'
    | '/api/contact-activities'
    | '/api/contact-role-assignments'
    | '/api/contact-roles'
    | '/api/contacts'
    | '/api/workspaces'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiChromeServerRoute: typeof ApiChromeServerRoute
  ApiContactActivitiesServerRoute: typeof ApiContactActivitiesServerRoute
  ApiContactRoleAssignmentsServerRoute: typeof ApiContactRoleAssignmentsServerRoute
  ApiContactRolesServerRoute: typeof ApiContactRolesServerRoute
  ApiContactsServerRoute: typeof ApiContactsServerRoute
  ApiWorkspacesServerRoute: typeof ApiWorkspacesServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/demo': {
      id: '/demo'
      path: '/demo'
      fullPath: '/demo'
      preLoaderRoute: typeof DemoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$workspace/contacts/': {
      id: '/$workspace/contacts/'
      path: '/$workspace/contacts'
      fullPath: '/$workspace/contacts'
      preLoaderRoute: typeof WorkspaceContactsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$workspace/contacts/$contact': {
      id: '/$workspace/contacts/$contact'
      path: '/$workspace/contacts/$contact'
      fullPath: '/$workspace/contacts/$contact'
      preLoaderRoute: typeof WorkspaceContactsContactRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/workspaces': {
      id: '/api/workspaces'
      path: '/api/workspaces'
      fullPath: '/api/workspaces'
      preLoaderRoute: typeof ApiWorkspacesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/contacts': {
      id: '/api/contacts'
      path: '/api/contacts'
      fullPath: '/api/contacts'
      preLoaderRoute: typeof ApiContactsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/contact-roles': {
      id: '/api/contact-roles'
      path: '/api/contact-roles'
      fullPath: '/api/contact-roles'
      preLoaderRoute: typeof ApiContactRolesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/contact-role-assignments': {
      id: '/api/contact-role-assignments'
      path: '/api/contact-role-assignments'
      fullPath: '/api/contact-role-assignments'
      preLoaderRoute: typeof ApiContactRoleAssignmentsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/contact-activities': {
      id: '/api/contact-activities'
      path: '/api/contact-activities'
      fullPath: '/api/contact-activities'
      preLoaderRoute: typeof ApiContactActivitiesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/chrome': {
      id: '/api/chrome'
      path: '/api/chrome'
      fullPath: '/api/chrome'
      preLoaderRoute: typeof ApiChromeServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DemoRoute: DemoRoute,
  WorkspaceContactsContactRoute: WorkspaceContactsContactRoute,
  WorkspaceContactsIndexRoute: WorkspaceContactsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiChromeServerRoute: ApiChromeServerRoute,
  ApiContactActivitiesServerRoute: ApiContactActivitiesServerRoute,
  ApiContactRoleAssignmentsServerRoute: ApiContactRoleAssignmentsServerRoute,
  ApiContactRolesServerRoute: ApiContactRolesServerRoute,
  ApiContactsServerRoute: ApiContactsServerRoute,
  ApiWorkspacesServerRoute: ApiWorkspacesServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
