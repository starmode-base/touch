---
alwaysApply: true
---

## Instructions

- Avoid premature/paranoid defensive programming; guard only against known error cases
- Only engineer for what the requirements are, less is more
- Avoid premature optimizations
- Prefer failing fast over speculative fallbacks; do not invent defaults or silent recovery without an explicit requirement or observed failures

## Code style

- Default to functional style, but be pragmatic and use imperative when needed
  - Prefer pure functions
  - Prefer immutability (local mutability is acceptable if there is good reason to use it)

## Testing philosophy

- Write code with testing in mind
  - Strive to write functions that can be tested without mocks
  - Create factories for boundary functions to support testing without mocks

## Documentation

- Always use sentence case for titles (never title case)
- In code comments with _one_ sentence, omit the period
